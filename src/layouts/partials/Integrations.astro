---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const sectionData = (await getEntry(
  "integrationsSectionCollection",
  "integrations"
)) as CollectionEntry<"integrationsSectionCollection">;
const { enable, title, list, link } = sectionData.data;
---

{
  enable && (
    <section class="section">
      <div class="container">
        <div class="section-container">
          <div class="section-intro centralize">
            <h2
              class="title hasEmphasize"
              data-aos="fade-up-sm"
              data-aos-delay="0"
              set:html={markdownify(title)}
            />
          </div>
          <div class="section-content">
            <div class="grid sm:grid-cols-2 xl:grid-cols-4 grid-rows-2 gap-5 ">
              {list.length &&
                list.map((item, index) => {
                  const isLargeCard = item.isLargeCard;
                  const aosDelay = 100 * (index % 4);
                  return (
                    <div
                      data-aos="zoom-out-sm"
                      data-aos-delay={aosDelay}
                      class:list={[
                        "rounded-3xl-sm border border-border hover:bg-light transition-colors duration-300 px-5 py-8 flex items-start gap-4 hover:shadow-sm",
                        {
                          "sm:row-span-2 sm:flex-col justify-between":
                            isLargeCard,
                        },
                      ]}
                    >
                      {/* LOGO */}
                      <ImageMod
                        src={item.image}
                        alt={item.title}
                        class="min-w-10 aspect-square"
                        width={60}
                        height={60}
                      />

                      {/* CONTENT */}
                      <div class="flex flex-col justify-center gap-4">
                        <h3 class="text-h5-sm font-medium">{item.title}</h3>
                        <p class="text-base text-neutral">{item.subtitle}</p>
                      </div>
                    </div>
                  );
                })}
            </div>

            {link.enable && (
              <div class="text-center flex justify-center mt-10 lg:mt-14">
                <a
                  href={link.link}
                  class="text-primary flex items-center gap-1 text-h6 font-medium underline"
                  aria-label="View all integrations"
                >
                  <span>{link.label}</span>
                  <Icon name="externalLink" class="text-2xl translate-y-1" />
                </a>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  )
}
