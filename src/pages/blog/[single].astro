---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import readingTime from "@/lib/utils/readingTime";
import { sortByDate } from "@/lib/utils/sortFunctions";
import BlogSection from "@/partials/BlogSection.astro";
import CallToAction from "@/partials/CallToAction.astro";

export async function getStaticPaths() {
  const COLLECTION_FOLDER = "blog";
  const allPosts = await getSinglePage(COLLECTION_FOLDER);
  const paths = allPosts.map((post) => ({
    params: {
      single: post.slug,
    },
    props: { post },
  }));

  return paths;
}
const COLLECTION_FOLDER = "blog";
const { post } = Astro.props;
const { Content } = await post.render();
const { date, description, image, meta_title, title, author } = post.data;
const posts = await getSinglePage(COLLECTION_FOLDER);
const sortedPosts = sortByDate(posts);
const recentPosts = sortedPosts
  .filter((item) => item.slug !== post.slug)
  .slice(0, 3);

const estimatedReadingTime = readingTime(post.body);
---

<Base title={title} meta_title={meta_title} description={description}>
  <section class="ph-spacing bg-light">
    <div class="container text-center">
      <div class="flex flex-col items-center gap-16 lg:gap-28">
        <div class="space-y-3 md:space-y-5 mx-auto">
          {
            date && (
              <p
                class="text-center text-base font-medium text-text pb-2"
                data-aos="fade-up-sm"
                data-aos-delay="0"
              >
                Last Updated
                <span set:html={dateFormat(date, " MMM dd, yyyy")} />
              </p>
            )
          }
          <h1
            class="page-heading leading-none text-center !mb-6"
            data-aos="fade-up-sm"
            data-aos-delay="50"
            set:html={title}
          />

          <div
            class="flex flex-wrap items-center justify-center gap-5"
            data-aos="fade-up-sm"
            data-aos-delay="100"
          >
            <div
              class="bg-primary size-8 rounded-full flex justify-center items-center"
            >
              <svg
                class="text-white"
                width="22"
                height="22"
                viewBox="0 0 19 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M1.5 15C1.5 13.9391 1.92143 12.9217 2.67157 12.1716C3.42172 11.4214 4.43913 11 5.5 11H13.5C14.5609 11 15.5783 11.4214 16.3284 12.1716C17.0786 12.9217 17.5 13.9391 17.5 15C17.5 15.5304 17.2893 16.0391 16.9142 16.4142C16.5391 16.7893 16.0304 17 15.5 17H3.5C2.96957 17 2.46086 16.7893 2.08579 16.4142C1.71071 16.0391 1.5 15.5304 1.5 15Z"
                  stroke="currentColor"
                  stroke-width="1.5"
                  stroke-linejoin="round"></path>
                <path
                  d="M9.5 7C11.1569 7 12.5 5.65685 12.5 4C12.5 2.34315 11.1569 1 9.5 1C7.84315 1 6.5 2.34315 6.5 4C6.5 5.65685 7.84315 7 9.5 7Z"
                  stroke="currentColor"
                  stroke-width="1.5"></path>
              </svg>
            </div>
            <div class="text-sm">
              by <span class="font-bold text-text-dark">{author}</span>
            </div>
            <div class="flex items-center">
              <span
                class="w-1.5 h-1.5 bg-text-light inline-block rounded-full mr-3 translate-y-[1px]"
              ></span>

              <span class="text-sm" style="line-height: normal;"
                >{estimatedReadingTime}</span
              >
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <div class="ph-merged-section">
    <div class="container">
      {
        image && (
          <div data-aos="fade-up-sm" data-aos-delay="150">
            <ImageMod
              src={image}
              alt={title}
              width={1300}
              height={768}
              class="w-full max-h-[580px] object-cover rounded-2xl"
            />
          </div>
        )
      }
    </div>
  </div>
  <section class="section -mt-20">
    <div class="container">
      <div class="content xl:px-32">
        <Content />
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container">
      <div class="section-container">
        <div class="section-intro text-center">
          <h3 class="text-h3-sm">Read More Articles</h3>
        </div>
        <div class="section-content">
          <BlogSection posts={recentPosts} />
        </div>
      </div>
    </div>
  </section>
  <CallToAction hasBackground={true} />
</Base>
